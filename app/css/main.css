/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}

/* mixins */
html {
  font-size: 62.5%;
}

@media (min-width: 1024px) {
  html {
    font-size: 80%;
  }
}

body {
  font-family: 'Oswald', sans-serif;
  color: #07161C;
  position: relative;
}

main {
  margin-top: 50px;
}

.company, .realizations, .reference, .qualifications, .contact {
  padding: 10px;
  font-size: 1.5rem;
  text-align: justify;
  line-height: 2rem;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.company__header, .realizations__header, .reference__header, .qualifications__headers, .contact__header {
  font-size: 3.2rem;
  text-transform: uppercase;
  text-align: center;
  -ms-flex-line-pack: center;
      align-content: center;
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
}

/* HEADER STYLE */
.page__header {
  background-color: #F4F4F4;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  width: 100vw;
  height: 50px;
  position: fixed;
  z-index: 2;
  -ms-flex-line-pack: center;
      align-content: center;
  top: 0;
}

@media (min-width: 1024px) {
  .page__header {
    background-color: #D2D7C7;
    height: 80px;
  }
}

.header__logo {
  margin: 10px;
  width: auto;
  height: 70%;
}

.header__menu {
  position: absolute;
  top: 50px;
  display: block;
  width: 100vw;
  height: 0px;
}

@media (min-width: 1024px) {
  .header__menu {
    position: relative;
    width: auto;
    height: 100%;
    top: 0;
    padding-right: 30px;
  }
}

.menu__btn {
  position: absolute;
  top: -60px;
  right: 5px;
  border: none;
  background-color: transparent;
  height: 40px;
  margin: 15px;
  font-size: 2.9rem;
}

.menu__btn:focus ~ .menu__list {
  -webkit-transform: translateX(0vw);
      -ms-transform: translateX(0vw);
          transform: translateX(0vw);
}

@media (min-width: 1024px) {
  .menu__btn {
    display: none;
  }
}

.menu__list {
  position: relative;
  list-style-type: none;
  padding: 0;
  margin: 0;
  height: 100vh;
  -webkit-transition: 0.5s;
  -o-transition: 0.5s;
  transition: 0.5s;
  -webkit-transform: translateX(100vw);
      -ms-transform: translateX(100vw);
          transform: translateX(100vw);
}

.menu__list::after {
  position: absolute;
  content: '';
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  background-color: #07161C;
  z-index: -1;
  opacity: 0.5;
  -webkit-transition: 0.5s;
  -o-transition: 0.5s;
  transition: 0.5s;
}

@media (min-width: 1024px) {
  .menu__list::after {
    background-color: transparent;
  }
}

@media (min-width: 1024px) {
  .menu__list {
    -webkit-transform: translateX(0vw);
        -ms-transform: translateX(0vw);
            transform: translateX(0vw);
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    height: 100%;
  }
}

.menu__list .list__elem {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.menu__list .list__link {
  background-color: #F4F4F4;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  border: none;
  color: #07161C;
  cursor: pointer;
  width: 90%;
  display: inline-block;
  font-size: 2.5rem;
  line-height: 1em;
  margin: 15px 10px;
  outline: none;
  padding: 12px 10px;
  position: relative;
  text-transform: uppercase;
  font-weight: 900;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

@media (min-width: 1024px) {
  .menu__list .list__link {
    font-size: 1.9rem;
  }
}

.menu__list .list__link:before, .menu__list .list__link:after {
  border-color: transparent;
  -webkit-transition: all 0.25s;
  -o-transition: all 0.25s;
  transition: all 0.25s;
  border-style: solid;
  border-width: 0;
  content: "";
  height: 24px;
  position: absolute;
  width: 34px;
}

.menu__list .list__link:focus:before, .menu__list .list__link.focus:before, .menu__list .list__link:focus:after, .menu__list .list__link.focus:after {
  height: 100%;
  width: 100%;
}

.menu__list .list__link:hover:before, .menu__list .list__link.hover:before, .menu__list .list__link:hover:after, .menu__list .list__link.hover:after {
  height: 100%;
  width: 100%;
}

.menu__list .list__link:before {
  border-color: #F4F4F4;
  border-left-width: 2px;
  border-top-width: 2px;
  left: -5px;
  top: -5px;
}

.menu__list .list__link:after {
  border-bottom-width: 2px;
  border-color: #F4F4F4;
  border-right-width: 2px;
  bottom: -5px;
  right: -5px;
}

/* START */
.start {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  background-image: url("../images/1sm.jpg");
  background-size: cover;
  background-attachment: fixed;
  background-repeat: no-repeat;
  height: 100vh;
  width: auto;
  color: #F4F4F4;
}

@media (min-width: 500px) {
  .start {
    background-image: url("../images/1bg.jpg");
    background-position: 50% 50%;
  }
}

.start__container {
  margin: 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

.start__header {
  margin: 0;
  width: 100%;
  text-align: center;
  letter-spacing: 5px;
  font-size: 4.2rem;
  text-transform: uppercase;
  border: 5px solid #F4F4F4;
  padding: 10px;
}

.start__info {
  text-align: center;
  margin: 0;
  font-size: 2.0rem;
  text-transform: capitalize;
  letter-spacing: .5rem;
  border: 5px solid #F4F4F4;
  border-top: none;
  padding: 5px;
  -ms-flex-preferred-size: 75%;
      flex-basis: 75%;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

.start__info-small {
  -ms-flex-preferred-size: 25%;
      flex-basis: 25%;
  border-right: none;
}

.start__info2 {
  text-align: center;
  letter-spacing: 2px;
  line-height: 3.5rem;
  font-size: 2.5rem;
}

svg {
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 100px;
}

@media (max-width: 699px) {
  .svg--lg {
    display: none;
  }
}

@media (min-width: 700px) {
  .svg--sm {
    display: none;
  }
}

svg.skos {
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 10vw;
}

/* COMPANY */
.company {
  background-color: #8F989B;
  color: #F4F4F4;
  position: relative;
  border-left: 5px solid transparent;
}

.company::before {
  content: '';
  background-color: #07161C;
  position: absolute;
  top: 20px;
  width: 45px;
}

.company__article {
  font-size: 2rem;
  line-height: 3rem;
  text-indent: 50px;
}

.article__header {
  font-size: 2rem;
  width: auto;
  background-color: #F4F4F4;
  color: #8F989B;
  text-indent: 0;
  text-transform: uppercase;
  text-align: center;
  margin: 30px 30%;
  padding: 0;
}

.article__list {
  text-indent: 0;
}

@media (min-width: 1024px) {
  .article__list {
    -webkit-column-count: 2;
            column-count: 2;
    -webkit-column-gap: 90px;
            column-gap: 90px;
  }
}

.article__list .list__elem {
  letter-spacing: 1px;
}

/*  REALIZATIONS*/
.realizations {
  background-color: #D2D7C7;
}

.realizations__info {
  font-weight: 300;
  text-align: center;
  background-color: #F4F4F4;
  margin: 0;
}

.realizations__info2 {
  background-color: #F4F4F4;
  padding: 10px;
  margin: 0;
  text-align: center;
  font-size: 1.5rem;
}

.realizations__list {
  font-size: 1.8rem;
  font-weight: 600;
  color: #3D5B68;
}

@media (min-width: 1024px) {
  .realizations__list {
    -webkit-column-count: 2;
            column-count: 2;
    -webkit-column-gap: 90px;
            column-gap: 90px;
  }
}

.realizations__list .list__elem {
  margin-bottom: 10px;
  margin-left: -20px;
}

/* REFERENCE */
.reference {
  -ms-flex-pack: distribute;
      justify-content: space-around;
  position: relative;
  overflow: hidden;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.reference::after {
  content: '';
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: url("../images/bg1.jpeg");
  background-size: cover;
  background-position: 50% 50%;
  background-attachment: fixed;
  -webkit-filter: brightness(50%) opacity(40%);
          filter: brightness(50%) opacity(40%);
}

.reference__info {
  width: 100%;
  background-color: #8F989B;
  color: #F4F4F4;
  padding: 5px;
  font-size: 2rem;
  text-transform: uppercase;
  text-align: center;
}

.reference__logo {
  width: 40%;
  height: 100%;
  margin: 10px;
}

@media (min-width: 500px) {
  .reference__logo {
    width: 20%;
    height: 100%;
  }
}

.reference__logo2 {
  width: 20%;
  height: 100%;
  margin: 10px;
}

/* qualifications */
.qualifications {
  background-color: #D2D7C7;
  text-align: center;
  position: relative;
  padding-bottom: 50px;
}

@media (min-width: 1024px) {
  .qualifications {
    padding-bottom: 150px;
  }
}

.qualifications__info {
  width: 100%;
  text-align: center;
  font-weight: 600;
  padding: 5px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  margin: 0;
}

.snip1573 {
  display: inline-block;
  margin: 10px 7px;
  max-width: 315px;
  min-width: 230px;
  overflow: hidden;
  position: relative;
  text-align: center;
  width: 100%;
  -webkit-box-flex: 0;
      -ms-flex: 0;
          flex: 0;
  background-color: #07161C;
  color: #F4F4F4;
  font-size: 1.8rem;
  font-weight: 600;
}

.snip1573 * {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 0;
  -webkit-transition: all 0.35s ease;
  -o-transition: all 0.35s ease;
  transition: all 0.35s ease;
}

.snip1573:before,
.snip1573:after {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  -webkit-transition: all 0.35s ease;
  -o-transition: all 0.35s ease;
  transition: all 0.35s ease;
  background-color: #000000;
  border-left: 3px solid #fff;
  border-right: 3px solid #fff;
  content: '';
  z-index: 1;
}

.snip1573:before {
  -webkit-transform: skew(45deg) translateX(-155%);
      -ms-transform: skew(45deg) translateX(-155%);
          transform: skew(45deg) translateX(-155%);
}

.snip1573:after {
  -webkit-transform: skew(45deg) translateX(155%);
      -ms-transform: skew(45deg) translateX(155%);
          transform: skew(45deg) translateX(155%);
}

.snip1573 p {
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  max-width: 100%;
  vertical-align: top;
}

.snip1573 figcaption {
  top: 50%;
  left: 50%;
  position: absolute;
  z-index: 2;
  -webkit-transform: translate(-50%, -50%) scale(0.5);
      -ms-transform: translate(-50%, -50%) scale(0.5);
          transform: translate(-50%, -50%) scale(0.5);
  opacity: 0;
  -webkit-box-shadow: 0 0 10px #000000;
          box-shadow: 0 0 10px #000000;
}

.snip1573 h3 {
  background-color: #000000;
  border: 2px solid #fff;
  color: #fff;
  font-size: 1em;
  font-weight: 600;
  letter-spacing: 1px;
  margin: 0;
  padding: 5px 10px;
  text-transform: uppercase;
}

.snip1573 a {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 3;
}

.snip1573:hover:before {
  -webkit-transform: skew(45deg) translateX(-55%);
  -ms-transform: skew(45deg) translateX(-55%);
      transform: skew(45deg) translateX(-55%);
}

.snip1573:hover:after {
  -webkit-transform: skew(45deg) translateX(55%);
  -ms-transform: skew(45deg) translateX(55%);
      transform: skew(45deg) translateX(55%);
}

.snip1573:hover figcaption {
  -webkit-transform: translate(-50%, -50%) scale(1);
  -ms-transform: translate(-50%, -50%) scale(1);
      transform: translate(-50%, -50%) scale(1);
  opacity: 1;
}

/* contact */
.contact {
  background-color: #3D5B68;
  color: #F4F4F4;
}

.contact__company {
  text-align: center;
  line-height: 2.6rem;
  width: 100%;
}

.contact__map {
  width: 100%;
  height: 200px;
  border-radius: 20px;
}

@media (min-width: 500px) {
  .contact__map {
    max-width: 500px;
    height: 500px;
    margin: 10px;
  }
}

.contact__address {
  padding: 10px 0;
  width: 100%;
}

.address__elem {
  display: block;
  color: #D2D7C7;
  margin-bottom: 10px;
  letter-spacing: 0.1rem;
}

.address__elem b {
  color: #F4F4F4;
  margin-right: 5px;
  text-transform: uppercase;
}

.contact__office__header {
  margin: 0;
  text-transform: uppercase;
}

.office__days {
  list-style-type: none;
}

.office__days li {
  margin-bottom: 10px;
}

.contact__info {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  width: 100vw;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  padding: 20px;
}

.contact__desc {
  width: 100%;
}

.contact__details {
  width: 100%;
  min-height: 100px;
  border: 1px solid #F4F4F4;
  overflow: hidden;
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.contact__details:hover .contact__box {
  -webkit-transform: translateY(0);
      -ms-transform: translateY(0);
          transform: translateY(0);
}

@media (min-width: 500px) {
  .contact__details {
    max-width: 300px;
    margin: 10px;
  }
}

.contact__box {
  position: absolute;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  background-color: #07161C;
  -webkit-transition: .5s ease-in-out;
  -o-transition: .5s ease-in-out;
  transition: .5s ease-in-out;
  -webkit-transform: translateY(100%);
      -ms-transform: translateY(100%);
          transform: translateY(100%);
}

.contact__name {
  position: absolute;
  padding: 0;
  margin: 0;
  text-align: center;
}

.box__link {
  display: block;
  text-align: center;
  color: #D2D7C7;
  font-size: 1.9rem;
  padding: 5px;
}

/* FOOTER */
.footer {
  min-height: 30px;
  /*height: 100%;*/
  background-color: #07161C;
  color: #F4F4F4;
  font-size: 1.5rem;
  text-align: center;
}

.footer__info {
  padding: 20px 10px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
